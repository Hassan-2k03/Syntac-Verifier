Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> CONDITION QUESTIONMARK EXPRESSION1 COLON EXPRESSION2 SEMICOLON

Terminals, with rules where they appear

COLON                : 1
CONDITION            : 1
EXPRESSION1          : 1
EXPRESSION2          : 1
QUESTIONMARK         : 1
SEMICOLON            : 1
error                : 

Nonterminals, with rules where they appear

statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . CONDITION QUESTIONMARK EXPRESSION1 COLON EXPRESSION2 SEMICOLON

    CONDITION       shift and go to state 2

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .



state 2

    (1) statement -> CONDITION . QUESTIONMARK EXPRESSION1 COLON EXPRESSION2 SEMICOLON

    QUESTIONMARK    shift and go to state 3


state 3

    (1) statement -> CONDITION QUESTIONMARK . EXPRESSION1 COLON EXPRESSION2 SEMICOLON

    EXPRESSION1     shift and go to state 4


state 4

    (1) statement -> CONDITION QUESTIONMARK EXPRESSION1 . COLON EXPRESSION2 SEMICOLON

    COLON           shift and go to state 5


state 5

    (1) statement -> CONDITION QUESTIONMARK EXPRESSION1 COLON . EXPRESSION2 SEMICOLON

    EXPRESSION2     shift and go to state 6


state 6

    (1) statement -> CONDITION QUESTIONMARK EXPRESSION1 COLON EXPRESSION2 . SEMICOLON

    SEMICOLON       shift and go to state 7


state 7

    (1) statement -> CONDITION QUESTIONMARK EXPRESSION1 COLON EXPRESSION2 SEMICOLON .

    $end            reduce using rule 1 (statement -> CONDITION QUESTIONMARK EXPRESSION1 COLON EXPRESSION2 SEMICOLON .)

